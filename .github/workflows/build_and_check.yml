name: R-CMD-check

on: push

jobs:
  build:

    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        #- { os: windows-latest, r: 'release', bioc: 'devel'}
        - { os: windows-latest, r: 'devel', bioc: 'devel'}
        #- { os: macOS-latest, r: 'release', bioc: 'devel', curlConfigPath: '/usr/bin/'}
        #- { os: macOS-latest, r: 'devel', bioc: 'devel', curlConfigPath: '/usr/bin/'} # mvtnorm cannot be compiled on mac
        #- { os: ubuntu-18.04, r: 'devel', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest" }
        - { os: ubuntu-latest, r: 'devel', image: 'bioconductor/bioconductor_docker:devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CURL_CONFIG: ${{ matrix.config.curlConfigPath }}curl-config

    steps:
    - name: checkout branch
      uses: actions/checkout@v2
      
    - name: setup R
      uses: r-lib/actions/setup-r@master
      if: matrix.config.image == null
      with:
        r-version: ${{ matrix.config.r }}

    - name: R version
      run: Rscript -e 'R.version'

    - name: setup Pandoc
      if: matrix.config.image == null
      uses: r-lib/actions/setup-pandoc@master

    - name: setup Tex
      uses: r-lib/actions/setup-tinytex@master

    - name: install Tex packages
      run: |
        tlmgr install a4wide
        tlmgr install ntgclass
        tlmgr install times
        tlmgr install hyperref

    - name: Install remotes
      run: |
        install.packages('remotes')
      shell: Rscript {0}

    - name: Set BiocManager version
      if: matrix.config.image == null
      run: |
        install.packages('BiocManager')
        BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
      shell: Rscript {0}

    - name: Query dependencies
      run: |
        BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories())), 'depends.Rds', version = 2)
      shell: Rscript {0}

    - name: Cache R packages
      if: runner.os != 'Windows' && matrix.config.image == null
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

    - name: Install Linux system dependencies
      if: runner.os == 'Linux'
      env:
        RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      run: |
        sudo apt-get update && sudo apt-get -y install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
        Rscript -e "remotes::install_github('r-hub/sysreqs')"
        sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
        sudo -s eval "$sysreqs"

    - name: Install macOS system dependencies
      if: runner.os == 'macOS'
      run: |
        brew install harfbuzz
        brew install fribidi
      
    - name: Install R package dependencies
      run: |
        remotes::install_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories()), Ncpu = 2L)
        remotes::install_cran("rcmdcheck")
        BiocManager::install(c("GenomeInfoDb", "BSgenome.Hsapiens.UCSC.hg18"))
      shell: Rscript {0}

    - name: Check
      run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error", check_dir = "check")
      shell: Rscript {0}


    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-results
        path: check

    # - name: Test coverage
    #   if: matrix.config.os == 'ubuntu-latest' && matrix.config.bioc == 'devel'
    #   run: |
    #     install.packages("covr")
    #     covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
    #   shell: Rscript {0}

    - name: Deploy
      if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.config.os == 'ubuntu-latest' && matrix.config.bioc == 'devel'
      run: |
        R CMD INSTALL .
        Rscript -e "install.packages(c('remotes', 'BiocManager', 'ragg'), Ncpu = 2L)"
        Rscript -e "BiocManager::install(version = '${{ matrix.config.bioc }}', ask = FALSE)"
        Rscript -e "remotes::install_dev('pkgdown'); pkgdown::deploy_to_branch(new_process = FALSE)"



